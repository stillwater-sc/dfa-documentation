<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>free-schedule on Domain Flow Architecture</title><link>https://stillwater-sc.github.io/domain-flow/tags/free-schedule/index.html</link><description>Recent content in free-schedule on Domain Flow Architecture</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Feb 2017 07:24:38 -0500</lastBuildDate><atom:link href="https://stillwater-sc.github.io/domain-flow/tags/free-schedule/index.xml" rel="self" type="application/rss+xml"/><item><title>Free Schedule</title><link>https://stillwater-sc.github.io/domain-flow/introduction/freeschedule/index.html</link><pubDate>Wed, 15 Feb 2017 07:24:38 -0500</pubDate><guid>https://stillwater-sc.github.io/domain-flow/introduction/freeschedule/index.html</guid><description>Free Schedule We alluded to the fact that inherently-parallel algorithms exhibit some partial order, and not a total order, because the instructions that can execute independently do not have any explicit order among each other. This extra degree of freedom is another benefit domain flow algorithms exhibit over sequential algorithms. It allows the execution engine to organize any resource contention in a more energy, space, or time efficient way, as long the machine does not violate the dependency relationships specified in the algorithm.</description></item></channel></rss>