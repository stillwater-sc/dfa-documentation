<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Algorithm - Tag - Domain Flow Architecture</title><link>https://stillwater-sc.github.io/domain-flow/tags/algorithm/index.html</link><description/><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 29 May 2023 17:05:17 +0000</lastBuildDate><atom:link href="https://stillwater-sc.github.io/domain-flow/tags/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>Signal Conditioning</title><link>https://stillwater-sc.github.io/domain-flow/ch8/conditioning/index.html</link><pubDate>Mon, 29 May 2023 16:55:11 +0000</pubDate><guid>https://stillwater-sc.github.io/domain-flow/ch8/conditioning/index.html</guid><description>Signal conditioning is the act of making signals more robust for further processing.</description></item><item><title>An Example</title><link>https://stillwater-sc.github.io/domain-flow/ch1/example/index.html</link><pubDate>Wed, 15 Feb 2017 07:00:21 -0500</pubDate><guid>https://stillwater-sc.github.io/domain-flow/ch1/example/index.html</guid><description>Let’s look at a simple, but frequently used operator in Deep Learning inference: dense matrix multiplication. A Domain Flow program 1 for this operator is shown below:
compute ( (i,j,k) | 1 &lt;= i,j,k &lt;= N ) { a: a[i,j-1,k] b: b[i-1,j,k] c: c[i,j,k-1] + a[i,j-1,k] * b[i-1,j,k] } The underlying algorithm requires a domain of computation governed by a set of constraints, and a set of computational dependencies that implicitly define a partial order across all the operations in the computation. The partial order is readily visible in the need to have computed the result for $c[i,j,k-1]$ before the computation of $c[i,j,k]$ can commence. In contrast, the $a$ and $b$ recurrences are independent of each other.</description></item><item><title>Digital Filtering</title><link>https://stillwater-sc.github.io/domain-flow/ch8/filters/index.html</link><pubDate>Mon, 29 May 2023 16:57:39 +0000</pubDate><guid>https://stillwater-sc.github.io/domain-flow/ch8/filters/index.html</guid><description>Digital Filtering is the act of focusing a signal to key features for observation.</description></item><item><title>Identification</title><link>https://stillwater-sc.github.io/domain-flow/ch8/identification/index.html</link><pubDate>Mon, 29 May 2023 16:58:21 +0000</pubDate><guid>https://stillwater-sc.github.io/domain-flow/ch8/identification/index.html</guid><description>Identification is the act of recognizing the signal in the presence of noise.
When there are signals and noises, physicists try to identify signals by modeling them, whereas statisticians oppositely try to model noise to identify signals. In this study, we applied the statisticians’ concept of signal detection of physics data with small-size samples and high dimensions without modeling the signals. Most of the data in nature, whether noises or signals, are assumed to be generated by dynamical systems; thus, there is essentially no distinction between these generating processes. We propose that the correlation length of a dynamical system and the number of samples are crucial for the practical definition of noise variables among the signal variables generated by such a system. Since variables with short-term correlations reach normal distributions faster as the number of samples decreases, they are regarded to be noise-like variables, whereas variables with opposite properties are signal-like variables. Normality tests are not effective for data of small-size samples with high dimensions. Therefore, we modeled noises on the basis of the property of a noise variable, that is, the uniformity of the histogram of the probability that a variable is a noise. We devised a method of detecting signal variables from the structural change of the histogram according to the decrease in the number of samples. We applied our method to the data generated by globally coupled map, which can produce time series data with different correlation lengths, and also applied to gene expression data, which are typical static data of small-size samples with high dimensions, and we successfully detected signal variables from them.</description></item><item><title>Spectral Analysis</title><link>https://stillwater-sc.github.io/domain-flow/ch8/spectral/index.html</link><pubDate>Mon, 29 May 2023 17:04:34 +0000</pubDate><guid>https://stillwater-sc.github.io/domain-flow/ch8/spectral/index.html</guid><description>Spectral Analysis analyses the frequency components of a signal.</description></item><item><title>Transforms</title><link>https://stillwater-sc.github.io/domain-flow/ch8/transforms/index.html</link><pubDate>Mon, 29 May 2023 17:05:17 +0000</pubDate><guid>https://stillwater-sc.github.io/domain-flow/ch8/transforms/index.html</guid><description>Signal Transforms map the signal function to other functions for further analysis.</description></item></channel></rss>